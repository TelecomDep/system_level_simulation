---
- name: Build and install System Level Simulation 
  hosts: localhost
  become: true
  vars:
    install_path: "{{ install_path }}"
    install_user: "{{ install_user }}"
    debug_mode: false  # true для включения режима отладки
  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install required packages
      apt:
        name: 
          - build-essential 
          - cmake 
          - libfftw3-dev 
          - libmbedtls-dev 
          - libboost-program-options-dev 
          - libconfig++-dev 
          - libsctp-dev
          - libzmq3-dev
          - make 
          - gcc 
          - g++ 
          - pkg-config 
          - libyaml-cpp-dev 
          - libgtest-dev
          - xterm
        state: present

    - name: Create install directory
      file:
        path: "{{ install_path }}"
        state: directory
        owner: "{{ install_user }}"
        group: "{{ install_user }}"

    - name: Install python package 'sionna'
      ansible.builtin.pip:
        name: sionna
      become: yes

    - name: Clone libzmq
      git: 
        repo: "https://github.com/zeromq/libzmq.git"
        dest: "{{ install_path }}/libzmq"
        clone: yes
      register: libzmq_cloned

    - name: Clone czmq
      git: 
        repo: "https://github.com/zeromq/czmq.git"
        dest: "{{ install_path }}/czmq"
        clone: yes
      register: libzmq_cloned

    - name: Compile, and install libzmq
      shell: |
        cd {{ install_path }}/libzmq
        ./autogen.sh
        ./configure
        make
        sudo make install
        sudo ldconfig

    - name: Compile, and install czmq
      shell: |
        cd {{ install_path }}/czmq
        ./autogen.sh
        ./configure
        make
        sudo make install
        sudo ldconfig

    - name: Update shared libraries cache
      command: ldconfig

    - name: Compile, and install srsRAN_Project
      shell: |
        cd {{ install_path }}/srsRAN_Project
        mkdir build
        cd build
        cmake ../ -DENABLE_EXPORT=ON -DENABLE_ZEROMQ=ON
        make -j16

    - name: Compile, and install srsRAN_4G
      shell: |
        cd {{ install_path }}/srsRAN_4G
        mkdir build
        cd build
        cmake ../ -DENABLE_EXPORT=ON -DENABLE_ZEROMQ=ON
        make -j16
    
    - name: Compile, and install Broker
      shell: |
        cd {{ install_path }}
        mkdir build
        cd build
        cmake ../
        make -j16
    
    - name: Copy user.db to srsRAN_Project/docker/open5gs
      shell: |
        cp configs/subscriber_db.csv srsRAN_Project/docker/open5gs/